version: '3.8'

services:
  # File Processing Service
  file-processing-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/file_processing
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - clamav
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: .
    command: python start_celery_worker.py
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/file_processing
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - clamav
    restart: unless-stopped
    deploy:
      replicas: 2

  # Celery Beat Scheduler
  celery-beat:
    build: .
    command: python start_celery_beat.py
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/file_processing
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=file_processing
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # ClamAV Antivirus
  clamav:
    image: clamav/clamav:stable
    environment:
      - CLAMAV_NO_FRESHCLAMD=true
      - CLAMAV_NO_MILTERD=true
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    restart: unless-stopped

  # Flower for Celery Monitoring (optional)
  flower:
    build: .
    command: celery -A app.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  clamav_data: